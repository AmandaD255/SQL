-- Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, Customerid, Country
FROM chinook.customers
WHERE Country <> "USA";

--Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE Country = "Brazil";

--Find the invoices of customers who are from Brazil.
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT cust.FirstName, cust.LastName,cust.Customerid, inv.Invoiceid, inv.InvoiceDate, inv.BillingCountry
FROM chinook.customers cust
LEFT JOIN chinook.invoices inv
ON cust.CustomerId = inv.CustomerId;

--Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title = "Sales Support Agent";

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry, CustomerId AS Customers
FROM chinook.invoices
ORDER BY BillingCountry;

--Provide a query that shows the invoices associated with each sales agent.
--The resulting table should include the Sales Agents's full name.
SELECT emp.LastName, emp.FirstName, inv.InvoiceId
FROM chinook.employees emp
JOIN chinook.customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId = cust.CustomerId
WHERE emp.Title = "Sales Support Agent";

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT inv.Total, cust.FirstName AS "Customer First Name", cust.LastName, cust.Country, emp.FirstName AS "Employee First Name", emp.LastName
FROM chinook.invoices inv
JOIN chinook.customers cust ON cust.CustomerId = inv.CustomerId
JOIN chinook.employees emp ON emp.EmployeeId = cust.SupportRepId;

--How many Invoices were there in 2009
SELECT COUNT(InvoiceId)
FROM chinook.invoices
WHERE invoiceDate like "%2009%";

--What are the total sales for 2009
SELECT SUM(Total)
FROM chinook.invoices
WHERE invoiceDate like "%2009%";

--Write a query that includes the purchased track name with each invoice line ID
SELECT t.Name, i.InvoiceId
FROM chinook.tracks t
JOIN chinook.invoice_items i
ON i.TrackId = t.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID
SELECT t.Name,art.Name AS "Artist", i.InvoiceId
FROM chinook.tracks t
JOIN chinook.invoice_items i
ON i.TrackId = t.TrackId
JOIN chinook.albums a
ON a.AlbumId = t.AlbumId
JOIN chinook.artists art
ON art.ArtistId = a.ArtistId;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS "track name", a.Title AS "Album", m.Name AS "Media type", g.Name AS "Genre"
FROM chinook.tracks t
JOIN chinook.albums a
ON t.AlbumId = a.AlbumId
JOIN chinook.media_types m
ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres g
ON g.GenreId = t.GenreId;

--Show the total sales made by each sales agent.
SELECT ROUND(SUM(i.Total) ,2)AS "Total Sales", e.FirstName, e.LastName
FROM chinook.invoices i 
JOIN chinook.customers c
ON c.CustomerId = i.CustomerId
JOIN chinook.employees e 
ON e.EmployeeId = c.SupportRepId
WHERE e.Title = "Sales Support Agent"
GROUP BY e.FirstName;

--Which sales agent made the most dollars in sales in 2009?
SELECT ROUND(SUM(i.Total),2) AS Sales, e.FirstName, e.LastName
FROM chinook.invoices i 
JOIN chinook.customers c 
ON c.CustomerId = i.CustomerId
JOIN chinook.employees e 
ON e.EmployeeId = c.SupportRepId
WHERE i.InvoiceDate LIKE "%2009%"
GROUP BY e.FirstName
ORDER BY (ROUND(SUM(i.Total),2)) DESC LIMIT 1;

--What was the most expensive price for a track?
SELECT MAX(UnitPrice)
FROM chinook.invoice_items;

--Which songs were sold for $1.99?
SELECT t.Name
FROM chinook.tracks t 
JOIN chinook.invoice_items i
ON i.TrackId = t.TrackId
WHERE i.UnitPrice = 1.99;

--Which Song had the most sales?
SELECT t.Name AS "Song", i.Total
FROM chinook.tracks t
JOIN chinook.invoice_items inv
ON inv.TrackId = t.TrackId
JOIN chinook.invoices i 
ON i.InvoiceId = inv.InvoiceId
GROUP BY t.Name
ORDER BY i.Total DESC;
